<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.we.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.we.model.Role" >
    <constructor >
      <idArg column="ROLE_ID" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="ROLE_NAME" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="REMARK" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="CREATE_TIME" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="MODIFY_TIME" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_role
    where ROLE_ID = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_role
    where ROLE_ID = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.we.model.Role" >
    insert into t_role (ROLE_ID, ROLE_NAME, REMARK, 
      CREATE_TIME, MODIFY_TIME)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.we.model.Role" >
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        ROLE_ID,
      </if>
      <if test="roleName != null" >
        ROLE_NAME,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.we.model.Role" >
    update t_role
    <set >
      <if test="roleName != null" >
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ROLE_ID = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.we.model.Role" >
    update t_role
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP}
    where ROLE_ID = #{roleId,jdbcType=BIGINT}
  </update>

  <select id="findUserRole" resultMap="roleMap">
  	select r.* from t_role r
  	left join t_user_role ur on(r.role_id = ur.role_id)
	left join t_user u on(u.user_id = ur.user_id)
	where u.username = #{userName}
  </select>
</mapper>